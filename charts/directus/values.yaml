---
# Default values for directus.
# This is a YAML-formatted file.

replicaCount: 1

image:
  # -- Directus image docker repository
  repository: directus/directus
  # -- Pull policy for docker image
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- Image Pull Secrets in k8s for docker image
imagePullSecrets: []
# -- Helm name override in Chart.yaml. This name is being used for resource naming
nameOverride: ""
# -- Completely overrides Chart name
fullnameOverride: ""

# -- Init Containers for Directus pod
initContainers: []
#  - name: myinitcontainer
#    image: alpine:latest
#    restartPolicy: Always
#    command:
#      - sh
#      - -c
#      - cat /opt/file.txt
#    volumeMounts:
#      - name: opt
#        mountPath: /opt

# -- Sidecars for Directus pod
sidecars: []
#  - name: busybox
#    image: busybox:latest
#    imagePullPolicy: Always
#    command:
#      - /bin/sh
#      - -c
#      - sleep 3600;

sidecar:
  # IMPORTANT! This feature is going to be DEPRECATED in the next release in favour of `sidecars`
  # -- Sidecars for Directus pod
  enabled: false
  repository: busybox
  tag: latest
  pullPolicy: Always
  # -- Command to run in sidecar docker image
  command:
    - /bin/sh
    - -c
    - sleep 3600;
  securityContext: {}
    # allowPrivilegeEscalation: true

adminEmail: "directus-admin@example.com"

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  # -- Enable TLS in PUBLIC_URL
  enableTLS: true
  className: ""
  # -- Ingress annotations. Usually used in cloud environments
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    # -- Hostname to expose. You should create CNAME DNS record with this hostname to redirect to ALB DNS name
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

extraEnvVars: []

attachExistingSecrets: []
  # - existingSecretInKubernetes

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

livenessProbe:
  enabled: true
  httpGet:
    path: /
    port: http
readinessProbe:
  enabled: true
  httpGet:
    path: /
    port: http
startupProbe:
  enabled: false
  httpGet:
    path: /
    port: http


nodeSelector: {}

tolerations: []

affinity: {}

extraVolumes: []

extraVolumeMounts: []

# -- This setting enables the creation of `ADMIN_PASSWORD`, `KEY`, and `SECRET` variables in k8s secrets.
# If it is set to false, you MUST set these variables manually via existing secret resource and set its name below.
createApplicationSecret: true

applicationSecretName: "directus-application-secret"

# -- Database engine. Could be set to one value from the following list: `mysql`, `postgresql`.
# Please disable installations for other database engines in this chart.
# Please note if you use mariadb server, set `databaseEngine` to `mysql` value.
# Details are here - https://directus.io/docs/configuration/database.
databaseEngine: "mysql"

# -- Create PostgreSQL secret in Directus chart
# If set to enable, postgresql secret with values of `postgres-password`, `password`, and `replication-password` variables will be created.
# Please consult the official bitnami postgres values file - https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml#L164.
# If set to false, you MUST create a secret resource in k8s for postgresql installation and set the correct value to the `existingSecret` in the postgresql settings setion.
createPostgresqlSecret: false

# -- Create MySQL secret in Directus chart
# If set to enable, mysql secret with values of `mysql-root-password`, `mysql-replication-password` and `mysql-password` variables will be created.
# Please consult the official bitnami mysql values file - https://github.com/bitnami/charts/blob/main/bitnami/mysql/values.yaml#L152.
# If set to false, you MUST create a secret resource in k8s for mysql installation and set the correct value to the `existingSecret` in the mysql settings section.
createMysqlSecret: true

mysql:
  # -- The switch to switch off the installation of the mysql.
  # The rest of the settings are being used during the installation and for DB connection.
  # Link to the values.yaml file in bitnami repo - https://github.com/bitnami/charts/blob/main/bitnami/mysql/values.yaml
  enableInstallation: true
  auth:
    existingSecret: "directus-mysql-secret"
    database: "directus_mysql"
    username: "directus_mysql"
  # If you want to use your own mysql or mariadb insance, please provide the URL to the existing instance in `mysqlURL`.
  # Otherwise leave it empty to use mysql that being installed in the cluster with this chart.
  # Please note mysql.auth.database will be used as a name of the database
  # and mysql.auth.username will be used as username during the connection.
  mysqlURL: ""
  mysqlPort: ""

postgresql:
  # -- The switch to switch off the installation of the postgresql.
  # The rest of the settings are being used during the installation and for DB connection.
  # Link to the values.yaml file in bitnami repo - https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
  enableInstallation: false
  auth:
    existingSecret: "directus-postgresql-secret"
    database: "directus_postgres"
    username: "directus_postgres"
  # If you want to use your own postgresql, please provide the URL to the existing instance in `postgresqlURL`.
  # Otherwise leave it empty to use postgresql server that being installed in the cluster with this chart.
  # Please note postgresql.auth.database will be used as a name of the database
  # and postgresql.auth.username will be used as username during the connection.
  postgresqlURL: ""
  postgresqlPort: ""

redis:
  # -- Switch to enable Redis
  enabled: true
  auth:
    # -- Existing secret name with Redis password
    existingSecret: ""
    # -- The key in the secret with password
    existingSecretPasswordKey: ""
  replica:
    # -- Amount of Redis replicas
    replicaCount: 0
